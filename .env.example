# HireSync Environment Configuration
# Copy this file to .env and adjust values as needed

# ===== APPLICATION CONFIGURATION =====
# Server port
PORT=8080

# ===== ACTIVE PROFILE =====
# Options: local, dev, test, prod
SPRING_PROFILES_ACTIVE=local

# ===== DATABASE CONFIGURATION =====
# Local development database settings (using Docker)
DB_HOST=localhost
DB_PORT=5544
DB_NAME=hiresync_db
DB_USERNAME=hiresync_user
DB_PASSWORD=hiresync_password

# For external database configuration used in dev/prod
JDBC_DATABASE_URL=jdbc:postgresql://localhost:5432/hiresync
JDBC_DATABASE_USERNAME=postgres
JDBC_DATABASE_PASSWORD=postgres

# ===== JWT CONFIGURATION =====
# Secret key for JWT token generation - CHANGE THIS IN PRODUCTION!
# Should be at least 64 characters long for security
JWT_SECRET=CHANGE_THIS_TO_A_RANDOM_STRING_AT_LEAST_64_CHARACTERS_LONG_FOR_PRODUCTION_ENVIRONMENT
# Token expiration time in milliseconds (24 hours)
JWT_EXPIRATION=86400000

# ===== DATABASE POOL CONFIGURATION =====
DB_MAX_POOL_SIZE=10
DB_MIN_IDLE=5
DB_CONNECTION_TIMEOUT=30000
DB_IDLE_TIMEOUT=600000
DB_MAX_LIFETIME=1800000

# ===== JPA CONFIGURATION =====
# Use 'update' for development, 'validate' for production
JPA_DDL_AUTO=update

# ===== LOGGING LEVELS =====
LOG_LEVEL_ROOT=INFO
LOG_LEVEL_APP=DEBUG
LOG_LEVEL_SQL=DEBUG
LOG_LEVEL_SQL_PARAMS=TRACE

# ===== SWAGGER/API DOCS CONFIGURATION =====
SWAGGER_UI_ENABLED=true
SPRINGDOC_ENABLED=true

# ===== DEPLOYMENT CONFIGURATION =====
# Docker related settings
DOCKER_REGISTRY=docker.io/yourusername

# ===== FILE STORAGE CONFIGURATION =====
# MinIO configuration (optional)
MINIO_HOST=localhost
MINIO_PORT=9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET_NAME=hiresync
MINIO_ENABLED=false

# ===== MONITORING CONFIGURATION =====
# Enable Actuator endpoints (true for dev, false for prod)
ACTUATOR_DETAILED_HEALTH=true

# ===== SECURITY CONFIGURATION =====
# OWASP dependency check API key
NVD_API_KEY=

# ===== BUILD CONFIGURATION =====
# Skip tests during build
SKIP_TESTS=false
# Skip verification during deployment
SKIP_VERIFY=false

# ===== CI/CD CONFIGURATION =====
# These are typically set in CI/CD systems
SLACK_WEBHOOK=

# ===== ENVIRONMENT NOTES =====
# For local development with Docker:
# - Run ./connect-db.sh to automatically configure and start the application
# - PostgreSQL will be available at localhost:5544
#
# For development environment:
# - Run ./run-dev.sh to start PostgreSQL in Docker and run the application
#
# For production:
# - Run ./run-prod.sh after setting the JDBC_* environment variables
# - Or deploy with docker-compose.prod.yaml for a containerized setup 