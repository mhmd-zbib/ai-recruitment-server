# HireSync Application Environment Configuration
# Copy this file to .env and adjust values as needed

#==============================================================================
# APPLICATION SETTINGS
#==============================================================================

# Application profile (local, dev, test, prod)
SPRING_PROFILES_ACTIVE=local

# Time zone (UTC recommended for production)
TZ=UTC

#==============================================================================
# PORTS CONFIGURATION
#==============================================================================

# Main application port
APP_PORT=8080

# Database connection port (mapped to host)
DB_PORT=5432

# Debug port for remote debugging
DEBUG_PORT=5006

# Actuator endpoint port
ACTUATOR_PORT=8081

# Prometheus metrics port
PROMETHEUS_PORT=9090

# MinIO port (if enabled)
MINIO_PORT=9000

#==============================================================================
# DATABASE CONFIGURATION
#==============================================================================

# Database connection
DB_HOST=postgres
DB_NAME=hiresync
DB_USER=hiresync
DB_PASSWORD=hiresync

# Database roles
READONLY_PASSWORD=readonly_password

# Database backup settings
DB_BACKUP_DIR=./backups
DB_BACKUP_RETENTION=7

# Database pool settings
DB_MAX_POOL_SIZE=10
DB_MIN_IDLE=5
DB_CONNECTION_TIMEOUT=30000
DB_IDLE_TIMEOUT=600000
DB_MAX_LIFETIME=1800000

# JPA configuration
# Use 'update' for development, 'validate' for production
JPA_DDL_AUTO=update

#==============================================================================
# DOCKER CONFIGURATION
#==============================================================================

# Docker container restart policies
# Options: "no", "on-failure", "always", "unless-stopped"
DB_RESTART_POLICY=unless-stopped
DEVTOOLS_RESTART_POLICY=no
APP_RESTART_POLICY=always

# Volume names
POSTGRES_VOLUME=hiresync-postgres-data
MAVEN_REPO_VOLUME=hiresync-maven-repo
NETWORK_NAME=hiresync-network

# Docker paths for database initialization
DB_SCRIPTS_DIR=./docker/postgres/init

# Docker image settings (for production)
IMAGE_NAME=hiresync
IMAGE_TAG=latest
REGISTRY=ghcr.io
REPO_OWNER=zbib

# Container resources
APP_REPLICAS=2

#==============================================================================
# LOGGING CONFIGURATION
#==============================================================================

# Application logging
LOG_LEVEL_ROOT=INFO
LOG_LEVEL_APP=DEBUG
LOG_LEVEL_SQL=DEBUG
LOG_LEVEL_SQL_PARAMS=TRACE
LOG_FILE_MAX_SIZE=10MB
LOG_FILE_MAX_HISTORY=7

#==============================================================================
# SECURITY SETTINGS
#==============================================================================

# JWT Configuration (generate with openssl rand -base64 48)
JWT_SECRET=change_this_to_a_secure_random_string_in_production
JWT_EXPIRATION=86400000

#==============================================================================
# JVM AND MAVEN SETTINGS
#==============================================================================

# JVM options (add custom JVM options here)
JAVA_OPTS=-Xms256m -Xmx1024m -XX:+UseG1GC

# Maven options
MAVEN_OPTS=-Xmx512m -XX:+TieredCompilation -XX:TieredStopAtLevel=1

# Remote debugging (dev only)
DEBUG_ENABLED=false

#==============================================================================
# API DOCUMENTATION
#==============================================================================

# Swagger/OpenAPI configuration
SWAGGER_UI_ENABLED=true
SPRINGDOC_ENABLED=true

#==============================================================================
# FILE STORAGE CONFIGURATION
#==============================================================================

# MinIO configuration (optional)
MINIO_HOST=localhost
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET_NAME=hiresync
MINIO_ENABLED=false

#==============================================================================
# MONITORING CONFIGURATION
#==============================================================================

# Enable Actuator endpoints (true for dev, false for prod)
ACTUATOR_DETAILED_HEALTH=true

#==============================================================================
# BUILD CONFIGURATION
#==============================================================================

# Skip tests during build
SKIP_TESTS=false

# Skip verification during deployment
SKIP_VERIFY=false

#==============================================================================
# CI/CD CONFIGURATION
#==============================================================================

# OWASP dependency check API key
NVD_API_KEY=

# CI/CD integrations
SLACK_WEBHOOK=

# ===== ENVIRONMENT NOTES =====
# For local development with Docker:
# - Run ./connect-db.sh to automatically configure and start the application
# - PostgreSQL will be available at localhost:5544
#
# For development environment:
# - Run ./run-dev.sh to start PostgreSQL in Docker and run the application
#
# For production:
# - Run ./run-prod.sh after setting the JDBC_* environment variables
# - Or deploy with docker-compose.prod.yaml for a containerized setup 