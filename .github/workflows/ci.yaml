name: CI Pipeline

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

env:
  DOCKER_IMAGE: hiresync
  DOCKER_TAG: ${{ github.sha }}
  SPRING_PROFILES_ACTIVE: test
  TZ: UTC
  LOG_LEVEL_ROOT: WARN
  LOG_LEVEL_APP: DEBUG
  LOG_LEVEL_SQL: DEBUG
  JWT_SECRET: test-secret-key-with-minimum-length-of-32-characters
  JWT_ISSUER: hiresync-test
  JWT_EXPIRATION: 86400000
  JWT_REFRESH_EXPIRATION: 604800000
  SPRINGDOC_SWAGGER_UI_ENABLED: false
  SPRINGDOC_API_DOCS_ENABLED: false
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info
  MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS: never
  HIRESYNC_FEATURES_DEBUG-MODE: true

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          
      - name: Run PMD Static Analysis
        run: mvn pmd:pmd -P ci
        
      - name: Run SpotBugs Analysis
        run: mvn spotbugs:spotbugs -P ci
        
      - name: Run OWASP Dependency Check
        run: mvn dependency-check:check -P ci
        
      - name: Format and Lint Code
        run: mvn spotless:apply checkstyle:checkstyle -P ci

  unit-tests:
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          
      - name: Run Unit Tests
        run: mvn test -P ci
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/

  build:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          
      - name: Build with Maven
        run: mvn clean package -P ci
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: application
          path: target/*.jar

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:buildcache,mode=max

  integration-tests:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Run Integration Tests
        run: |
          docker-compose -f docker/docker-compose.test.yaml up -d
          sleep 30 # Wait for services to be ready
          mvn verify -P ci
          docker-compose -f docker/docker-compose.test.yaml down
