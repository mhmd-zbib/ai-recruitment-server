name: CI Pipeline

on:
  push:
    branches: [master, dev]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [master, dev]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_IMAGE: hiresync
  SPRING_PROFILES_ACTIVE: test
  JWT_SECRET: ${{ secrets.JWT_TEST_SECRET || 'f5a8f9g6v4afetgasgbga2g4qwtoplju' }}
  JWT_ISSUER: hiresync-test
  HIRESYNC_FEATURES_DEBUG-MODE: true

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Run Checkstyle
        run: mvn checkstyle:check -P ci -Dpmd.skip=true
  
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: code-quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Run Unit and Integration Tests
        run: mvn test -P ci -Dpmd.skip=true
  
  build:
    name: Build JAR
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Build JAR File
        run: mvn package -DskipTests -P ci -Dpmd.skip=true
      
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: application-jar
          path: target/*.jar
          retention-days: 1
  
  docker-check:
    name: Verify Docker Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: build
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: application-jar
          path: target
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          load: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_NAME }}-${{ github.sha }}
          platforms: linux/amd64
      
      - name: Test Docker image
        run: |
          docker image ls
          echo "âœ… Docker image built successfully: ${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_NAME }}-${{ github.sha }}"
