name: CI Pipeline

on:
  push:
    branches: [ main, master, dev ]
    paths-ignore:
      - '**/*.md'
      - '.github/ISSUE_TEMPLATE/**'
      - 'docs/**'
  pull_request:
    branches: [ main, master, dev ]
    paths-ignore:
      - '**/*.md'
      - '.github/ISSUE_TEMPLATE/**'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      full_scan:
        description: 'Run full security scan'
        required: false
        default: false
        type: boolean

env:
  MAVEN_OPTS: -Xmx2048m
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven
      
      - name: Make scripts executable
        run: |
          chmod +x mvnw
          find . -type f -name "*.sh" -exec chmod +x {} \;
      
      - name: Code style & formatting check
        id: style-check
        run: ./mvnw spotless:check checkstyle:check
        continue-on-error: true
        
      - name: Generate Checkstyle Report
        if: steps.style-check.outcome == 'failure'
        run: ./mvnw checkstyle:checkstyle -Dcheckstyle.skip=false
        continue-on-error: true
        
      - name: Archive Checkstyle Report
        if: steps.style-check.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle-report
          path: target/site/checkstyle*.html
          retention-days: 7

      - name: Static code analysis with PMD
        id: pmd-check
        run: ./mvnw pmd:check
        continue-on-error: true
        
      - name: Generate PMD Report
        if: steps.pmd-check.outcome == 'failure'
        run: ./mvnw pmd:pmd
        continue-on-error: true
        
      - name: Archive PMD Report
        if: steps.pmd-check.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: pmd-report
          path: target/site/pmd*.html
          retention-days: 7
        
      - name: SpotBugs analysis
        id: spotbugs-check
        run: ./mvnw spotbugs:check
        continue-on-error: true
        
      - name: Generate SpotBugs Report
        if: steps.spotbugs-check.outcome == 'failure'
        run: ./mvnw spotbugs:spotbugs
        continue-on-error: true
        
      - name: Archive SpotBugs Report
        if: steps.spotbugs-check.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: spotbugs-report
          path: target/spotbugsXml.xml
          retention-days: 7
          
      - name: Check for code duplication
        id: cpd-check
        run: ./mvnw cpd:check
        continue-on-error: true
        
      - name: Fail if critical checks didn't pass
        if: |
          steps.style-check.outcome == 'failure' || 
          steps.spotbugs-check.outcome == 'failure'
        run: |
          echo "::error::Critical code quality checks failed. Please fix the issues before merging."
          echo "::error::See uploaded reports for details."
          exit 1
          
      - name: Warn if non-critical checks didn't pass
        if: |
          steps.pmd-check.outcome == 'failure' || 
          steps.cpd-check.outcome == 'failure'
        run: |
          echo "::warning::Some code quality checks have warnings. Consider addressing them."
          echo "::warning::See uploaded reports for details."
      
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [code-quality]
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: hiresync_test
          POSTGRES_USER: hiresync_user
          POSTGRES_PASSWORD: hiresync_password
        ports:
          - 5544:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven
      
      - name: Build with Maven
        run: ./mvnw -B package -DskipTests
      
      - name: Run unit tests
        run: ./mvnw test
      
      - name: Run integration tests
        run: ./mvnw verify -Dspring.profiles.active=test
        
      - name: Generate JaCoCo report
        run: ./mvnw jacoco:report
      
      - name: Check test coverage
        run: ./mvnw jacoco:check
        
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: hiresync-artifacts
          path: |
            target/*.jar
            !target/*-sources.jar
            !target/*-javadoc.jar
          retention-days: 5
          
      - name: Archive test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            target/site/jacoco/
            target/surefire-reports/
          retention-days: 5
  
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [build-and-test]
    # Only run detailed security scans on main branches or when manually triggered with full_scan=true
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || inputs.full_scan
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven
      
      - name: Dependency check
        run: ./mvnw org.owasp:dependency-check-maven:check -DskipSystemScope=true
      
      - name: SonarCloud Scan
        if: env.SONAR_TOKEN != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      
      - name: Archive security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            target/dependency-check-report.html
            target/sonar/
          retention-days: 5
  
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [build-and-test]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and export Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          tags: hiresync:${{ github.sha }}
          outputs: type=docker,dest=/tmp/hiresync-image.tar
      
      - name: Archive Docker image
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: /tmp/hiresync-image.tar
          retention-days: 1 