name: CI Pipeline

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      # PostgreSQL service for integration tests
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: hiresync_test
          POSTGRES_USER: hiresync_user
          POSTGRES_PASSWORD: hiresync_password
        ports:
          - 5544:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Make scripts executable
      run: |
        chmod +x mvnw
        find scripts -name "*.sh" -type f -exec chmod +x {} \;
        find .git-hooks -name "*.sh" -type f -exec chmod +x {} \;
        
    - name: Set Git global config for CI
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
    
    - name: Fix line endings
      run: |
        # Run the improved line ending correction script
        bash .git-hooks/correct-line-endings.sh
        
        # Check if any files were modified and need to be committed
        if ! git diff --quiet; then
          echo "::warning::Line ending issues detected and fixed. Consider merging these fixes into your branch."
        fi
    
    - name: Build with Maven
      run: ./mvnw -B package --file pom.xml -DskipTests
      
    - name: Run code quality checks
      run: |
        # Run quality checks
        bash scripts/quality/quality-check.sh --quick
        
    - name: Run unit tests
      run: ./mvnw test
      
    - name: Run integration tests
      run: ./mvnw verify -Dspring.profiles.active=test
      
    - name: Generate JaCoCo report
      run: ./mvnw jacoco:report
    
    - name: Check test coverage
      run: ./mvnw jacoco:check
      
    - name: SonarCloud Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      if: env.SONAR_TOKEN != ''
      
    - name: Check for vulnerabilities
      run: ./mvnw org.owasp:dependency-check-maven:check

    - name: Build Docker image
      run: |
        # Make Docker build script executable
        chmod +x scripts/build/docker-build.sh
        
        # Build Docker image without pushing
        scripts/build/docker-build.sh --version=ci-test
      
    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: hiresync-artifacts
        path: |
          target/*.jar
          !target/*-sources.jar
          !target/*-javadoc.jar
        retention-days: 5
        
    - name: Archive code quality results
      uses: actions/upload-artifact@v3
      with:
        name: code-quality-reports
        path: |
          target/site/
          target/spotbugsXml.xml
          target/checkstyle-result.xml
          target/dependency-check-report.html
          target/jacoco.xml
        retention-days: 5 