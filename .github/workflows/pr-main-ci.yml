name: PR to Main Branch CI

on:
  pull_request:
    branches:
      - 'main'
      - 'master'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: hiresync_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: mvn -B clean package -DskipTests
      
      - name: Run unit tests
        run: mvn -B test
        env:
          SPRING_PROFILES_ACTIVE: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: hiresync_test
          DB_USERNAME: test_user
          DB_PASSWORD: test_password
      
      - name: Run integration tests
        run: mvn -B verify -P integration-test
        env:
          SPRING_PROFILES_ACTIVE: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: hiresync_test
          DB_USERNAME: test_user
          DB_PASSWORD: test_password
      
      - name: Run code quality checks
        run: mvn -B verify
        
      - name: Security scan
        uses: anchore/scan-action@v3
        with:
          path: "."
          fail-build: false
          severity-cutoff: high
      
      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
        
      - name: SonarQube Scan
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: Build Docker image
        run: docker build -t hiresync-test-image . 