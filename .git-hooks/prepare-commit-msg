#!/bin/bash

# prepare-commit-msg hook to provide a template for conventional commit messages
# Only applies when committing without a message (git commit)

# Get the source and commit message file
COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2

# ANSI color codes for better readability
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Only add template if this is a commit with no message
# (not from merge, squash, or when a message is provided)
if [ -z "$COMMIT_SOURCE" ]; then
  # Check if the commit message is empty or only contains comments/blank lines
  COMMIT_MSG=$(grep -v "^#" "$COMMIT_MSG_FILE" | tr -d '[:space:]')
  
  if [ -z "$COMMIT_MSG" ]; then
    echo -e "${BLUE}Using conventional commit message template...${NC}"
    
    # Create a template for conventional commits
    cat > "$COMMIT_MSG_FILE.tmp" << 'EOF'
# <type>(<scope>): <subject>
# |       |         |
# |       |         +-> Summary in present tense (lowercase, no period)
# |       |             e.g., "add feature", "fix login bug"
# |       |
# |       +-> Optional module name or context (lowercase)
# |           e.g., "auth", "api", "database", "user"
# |
# +-> Type of change:
#     - feat:     A new feature
#     - fix:      A bug fix
#     - docs:     Documentation changes
#     - style:    Code style changes (formatting, etc.)
#     - refactor: Code changes that neither fix bugs nor add features
#     - perf:     Performance improvements
#     - test:     Adding/updating tests
#     - build:    Build system or dependency changes
#     - ci:       CI configuration changes
#     - chore:    Other changes (that don't modify src or test files)
#     - revert:   Reverting previous changes
#
# Examples:
#   feat(auth): add social login with Google
#   fix(api): handle null responses in user service
#   docs: update installation instructions
#   style: format code according to new guidelines
#   refactor(database): improve query performance
#
# Commits MUST follow this convention to be accepted.
# For more information: https://www.conventionalcommits.org/

EOF
    
    # Append original commit message file content
    cat "$COMMIT_MSG_FILE" >> "$COMMIT_MSG_FILE.tmp"
    
    # Replace the original file
    mv "$COMMIT_MSG_FILE.tmp" "$COMMIT_MSG_FILE"
    
    echo -e "${GREEN}Template added to commit message.${NC}"
    echo -e "${BLUE}Edit your commit message and save to proceed.${NC}"
  fi
fi

exit 0 