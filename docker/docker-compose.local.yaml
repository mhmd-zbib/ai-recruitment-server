name: hiresync

services:
  # Database service
  postgres:
    image: postgres:16-alpine
    container_name: hiresync-postgres
    restart: unless-stopped
    ports:
      - "127.0.0.1:${DB_PORT:-5433}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_USER: ${DB_USER:-hiresync}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-hiresync}
      POSTGRES_DB: ${DB_NAME:-hiresync}
      TZ: ${TZ:-UTC}
      PGTZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-hiresync} -d ${DB_NAME:-hiresync}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: >
      postgres
        -c shared_buffers=256MB
        -c max_connections=200
        -c effective_cache_size=1GB
        -c work_mem=16MB
        -c maintenance_work_mem=64MB
        -c max_wal_size=1GB
        -c min_wal_size=80MB
    networks:
      - hiresync-network
    deploy:
      resources:
        limits:
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      org.hiresync.component: "database"
      org.hiresync.environment: "development"

  # Development tools container (JDK + Maven)
  devtools:
    image: maven:3.9-eclipse-temurin-21-jammy
    container_name: hiresync-devtools
    restart: unless-stopped
    volumes:
      - ..:/workspace:cached
      - maven-repo:/root/.m2/repository
      - ~/.gitconfig:/root/.gitconfig:ro
    working_dir: /workspace
    ports:
      - "127.0.0.1:8080:8080"    # Application
      - "127.0.0.1:5005:5005"    # Debugger
      - "127.0.0.1:35729:35729"  # LiveReload
    environment:
      MAVEN_CONFIG: /root/.m2
      JAVA_TOOL_OPTIONS: "-Dfile.encoding=UTF-8"
      MAVEN_OPTS: ${MAVEN_OPTS:--Xmx2048m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+TieredCompilation -XX:TieredStopAtLevel=1}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-local}
      SPRING_APPLICATION_NAME: hiresync-api
      
      # Database connection from inside container
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-hiresync}
      DB_USER: ${DB_USER:-hiresync}
      DB_PASSWORD: ${DB_PASSWORD:-hiresync}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-default_dev_secret_key_replace_in_production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      
      # Time zone
      TZ: ${TZ:-UTC}
    entrypoint: >
      sh -c "
        echo 'HireSync Development Tools Container'
        echo '=================================='
        echo 'Available commands:'
        echo '- mvn spring-boot:run (runs the application)'
        echo '- mvn test (runs all tests)'
        echo '- mvn package (builds the application)'
        echo '=================================='
        echo 'Keeping container alive...'
        tail -f /dev/null
      "
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hiresync-network
    deploy:
      resources:
        limits:
          memory: 3G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "bash", "-c", "ls -la /workspace"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    labels:
      org.hiresync.component: "development-tools"
      org.hiresync.environment: "development"

# Shared networks
networks:
  hiresync-network:
    name: ${NETWORK_NAME:-hiresync-network}
    driver: bridge

# Persistent volumes
volumes:
  postgres-data:
    name: ${POSTGRES_VOLUME:-hiresync-postgres-data}
  maven-repo:
    name: ${MAVEN_REPO_VOLUME:-hiresync-maven-repo}
