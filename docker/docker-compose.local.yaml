services:
  # Database service
  postgres:
    image: postgres:16-alpine
    container_name: hiresync-postgres
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER:-hiresync}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-hiresync}
      POSTGRES_DB: ${DB_NAME:-hiresync}
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER:-hiresync}"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Development tools container
  devtools:
    image: maven:3.9-eclipse-temurin-21-jammy
    container_name: hiresync-devtools
    volumes:
      - ../:/app
      - maven_repo:/root/.m2/repository
    working_dir: /app
    ports:
      - "${PORT:-8080}:8080"    # Application
      - "5005:5005"             # Remote debugger
    environment:
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: local
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-hiresync}
      DB_USER: ${DB_USER:-hiresync}
      DB_PASSWORD: ${DB_PASSWORD:-hiresync}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-default-dev-secret-key-replace-in-production}
      JWT_ISSUER: ${JWT_ISSUER:-hiresync-local}
      JWT_AUDIENCE: ${JWT_AUDIENCE:-hiresync-app}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION:-604800000}
      
      # Feature Configuration
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000}
      DEBUG_MODE: ${DEBUG_MODE:-true}
      ENABLE_EMAIL: ${ENABLE_EMAIL:-false}
      ENABLE_FILE_UPLOAD: ${ENABLE_FILE_UPLOAD:-true}
      
      # Documentation Configuration
      SPRINGDOC_ENABLED: ${SPRINGDOC_ENABLED:-true}
      SWAGGER_UI_ENABLED: ${SWAGGER_UI_ENABLED:-true}
      ACTUATOR_DETAILED_HEALTH: ${ACTUATOR_DETAILED_HEALTH:-always}
    # Keep container running until explicitly started with scripts/dev.sh
    command: tail -f /dev/null
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Shared networks and volumes
networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  maven_repo:
