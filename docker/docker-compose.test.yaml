services:
  # PostgreSQL service for testing
  test-db:
    image: postgres:16-alpine
    container_name: postgres_test_db
    environment:
      POSTGRES_DB: hiresync_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d hiresync_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

  # Spring Boot application service for testing
  app-test:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - SPRING_PROFILES_ACTIVE=test
        - DEBUG_MODE=true
        - SPRINGDOC_ENABLED=false
        - SWAGGER_UI_ENABLED=false
    container_name: hiresync_test_app
    depends_on:
      test-db:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=test
      - DB_HOST=test-db
      - DB_PORT=5432
      - DB_NAME=hiresync_test
      - DB_USERNAME=test_user
      - DB_PASSWORD=test_password
      - JPA_DDL_AUTO=create-drop
      - JPA_SHOW_SQL=true
      - SERVER_PORT=8080
      - JWT_SECRET=test_secret_key_for_development_only
      - JWT_EXPIRATION=86400000
      - JWT_REFRESH_EXPIRATION=604800000
      - JWT_ISSUER=hiresync-test
      - JWT_AUDIENCE=hiresync-app-test
      - JAVA_OPTS=-Xms512m -Xmx1024m -Dspring.profiles.active=test
    ports:
      - "8080:8080"
    networks:
      - test-network
    command: ["./mvnw", "test"]
    volumes:
      - ../src:/app/src
      - ../target:/app/target
      - ../logs:/app/logs
      - ../.mvn:/app/.mvn
      - ../mvnw:/app/mvnw
      - ../pom.xml:/app/pom.xml

networks:
  test-network:
    driver: bridge

volumes:
  postgres_test_data:
    driver: local